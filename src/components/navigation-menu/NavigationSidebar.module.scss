@use "styles/globals" as common;

$topOffset: calc(var(--decorator-sticky-offset, 0px) + 1rem);
$bottomOffset: 2rem;

.sidebar {
  background-color: var(--navds-semantic-color-component-background-light);
  padding: 1rem 0;
  margin-right: 2rem;
  top: $topOffset;
  min-width: 17rem;

  .title {
    padding: 1rem;
  }

  .list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  @media #{common.$mq-screen-tablet-and-desktop} {
    overflow: auto;
    max-height: calc(100vh - #{$topOffset} - #{$bottomOffset});
  }

  &__sticky {
    position: sticky;
  }

  & * {
    word-break: break-word;
  }
}

.navLink {
  $verticalPadding: 0.75rem;
  $horizontalPadding: 1rem;
  $decorWidth: 0.5rem;
  padding: $verticalPadding $horizontalPadding;

  @media #{common.$mq-screen-tablet-and-desktop} {
    margin: 0 $decorWidth;
  }

  &:hover {
    background-color: var(--navds-global-color-blue-100);
    color: var(--navds-global-color-gray-900);

    .decor {
      background-color: var(--navds-semantic-color-link);
    }
  }

  &:focus {
    outline: 0;
    box-shadow: 0 0 0 3px var(--navds-semantic-color-focus) inset;
  }

  &.up {
    .decor {
      transform-origin: top;
    }

    &.current {
      .decor {
        transform-origin: bottom;
      }
    }
  }

  &.down {
    .decor {
      transform-origin: bottom;
    }

    &.current {
      .decor {
        transform-origin: top;
      }
    }
  }

  .decor {
    visibility: hidden;
  }

  @media #{common.$mq-screen-tablet-and-desktop} {
    &.current {
      color: black;
      // text-decoration: none;

      .decor {
        transform: scaleY(1);
      }
    }

    .decor {
      visibility: visible;
      min-width: $decorWidth;
      margin: (-$verticalPadding) $decorWidth (-$verticalPadding) (-$decorWidth - $horizontalPadding);
      background-color: var(--navds-semantic-color-link);

      transform: scaleY(0);

      transition-property: transform;
      transition-duration: 0.12s;
      transition-timing-function: linear;
    }
  }
}
